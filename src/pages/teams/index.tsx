import { Box, Container, Typography } from '@mui/material'
import axios from 'axios'
import Head from 'next/head'
import React from 'react'
import TeamTable from '@/components/teams/TeamTable'
import TeamEdit from '@/components/teams/TeamEdit'
import { TeamsType } from '@/types/supabase'

const getNestedTeams = (teams: TeamsType[]) => {
  const cloneTeams = JSON.parse(JSON.stringify(teams))
  var nestedTeams = cloneTeams.reduce((result: TeamsType[], currTeam: TeamsType) => {
    const parent = currTeam.parentTeam ? cloneTeams.filter((team: TeamsType) => team.id === currTeam.parentTeam) : []
    if (parent.length) {
      if (parent[0].childTeams) parent[0].childTeams.push(currTeam)
      else parent[0].childTeams = [currTeam]
    } else result.push(currTeam)
    return result
  }, [])

  // Sort root parents by having an existing parent team
  nestedTeams.sort((next: any, curr: any) => curr.parentTeam && -1)

  return nestedTeams
}

export default function Teams({ teams, setTeams }: { teams: TeamsType[], setTeams: Function }) {
  const [loading, setLoading] = React.useState<Boolean>(teams.length === 0)
  const nestedTeams = React.useMemo<TeamsType[]>(() => getNestedTeams(teams), [teams])

  React.useEffect(() => {
    if (teams.length !== 0) return

    axios.get('/api/teams')
      .then(({ data }) => setTeams(data))
      .catch((err) => console.error(err))
      .finally(() => setLoading(false))
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [])

  return (
    <>
    <Head>
      <title>React Interview – Alveno</title>
      <meta name="description" content="Generated by create next app" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <Container maxWidth="md">
      <Box my={4}>
        <Typography variant="h4" component="h1" gutterBottom>
          Týmy
        </Typography>

        {loading ? (
          <>Loading</>
        ): (
          <>
            <TeamEdit teams={teams} setTeams={setTeams} />
            <TeamTable teams={nestedTeams} />
          </>
        )}
      </Box>
    </Container>
  </>
  )
}
